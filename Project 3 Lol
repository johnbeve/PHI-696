# Project 3

Your third project will require you to answer each of the 10 questions below.  You will be expected to open a pull request with your initial answers by the second class meeting, giving you one week to work on these problems. You and your peers will then have one week to work together to refine your respective initial answers, so they are ready for final submission. Once your pull requests have been reviewed and merged to the development branch, I will review them, then merge to the master branch. 

```
For any question involving the use of Protege, please be sure to import Basic Formal Ontology (https://raw.githubusercontent.com/BFO-ontology/BFO/v2019-08-26/bfo_classes_only.owl) and the Relations Ontology (https://raw.githubusercontent.com/oborel/obo-relations/master/ro.owl)
```

1. In BFO and RO identify at least one object property for each of a-e that _should have the listed property, but which does not_; argue for your case, using examples. 
``` 
  (a)  Reflexive
  - "has characteristic" should be a reflexive object property because everything has itself as a characteristic. 
  -  I have myself as a characteristic: being myself distinguishes me from other people and things.
  ...
 - I was informed by Giacomo on the Project 3 Google Doc that this relation holds between a specifically dependent continuant and an independent continuant, which necessitates the two belong to different classes.
 ...
 - Many of the mereotopological relations in RO could be reflexive, but aren't.
 - Ali and Jaron pointed out "overlaps" by explaining how an object is always perfectly overlapped with itself by virtue of the site it is contained in.
 - I think their point tracks on to relations like "coincident with" and "colocalizes with".
 - A process or entity is always perfectly coincident or colocalized with itself because of its identity.
  
  (b)  Transitive 
 - "immersed in" should be a transitive object property.
 - If object a is immersed in fluid b, and fluid b is immersed in fluid c, then object a is immersed in fluid c.
 - I am also interpreting "immersed in" as one type of the "located in" relation, which is listed as a transitive object property.
 
  (c)  Symmetric
 - I am confused about the "before or simultaneous with" relation because I do not understand why those relationships are not kept separate.
 - "simultaneous with" should definitely be a symmetric temporal relation.
  
  (d)  Functional 
 - I think "has prototype" should be a functional object property.
 - If a prototype is "some instance of a 'canonical'" entity, I am assuming there is only one prototype for every entity of interest.
 
  (e)  Symmetric and Reflexive
 - "overlaps" seems symmetric and reflexive to me (I got help from the project 3 Google doc on this one).
  
```

2. In BFO and RO identify at least one object property for each of a-e that _should not have the listed property, but which does_; argue for your case, using examples. 
```
  (a)  Irreflexive
 - I'm a little confused about the irreflexive property of the "has member" relation.
 - The relation is specifically designed to exist between items and collections, so what about a collection with only one item in it?
 - Can an object not be classed both as an 'item' and as a 'collection' of only itself?
 
  (b)  Transitive 
 - I actually cannot find any relations listed in RO that I take issue with having the transitive object property.
 - I do support Karl's justification for unlisting "ends after" as transitive due to the existence of time-traveling-to-kill-your-grandfather paradox.
 - I do support Jaron's justification for unlisting "aligned with" as transitive due to the existence of non-transitive alignment relations like overlap and adjacency.
 
  (c)  Asymmetric
 -  "has role in modeling" is an asymmetric relationship between information about an entity and the entity of interest.
 - I feel like if the entity of interest is also information, the two could hold a symmetric relationship.
 - Like, does the information in the left circle of a venn diagram not have a role in modeling the right side?

  (d)  Functional 
 - "characteristic of" is a functional relationship between a characteristic and the relevant bearer.
 - Isn't a functional object property limited to only a singular two-place relation? like, according to RO, a bearer can only have at most one characteristic?
 - I am confused about this object property because I believe a bearer can have as many characteristics as anybody feels like identifying.
 
  (e)  Inverse Functional
 - "has characteristic" is an inverse-functional relationship between a bearer and the relevant characteristic.
 - I am confused about this object property because I believe an identical characteristic can have many bearers, as many characteristics are able to be shared.
 
```

3. Model the following natural language expressions using terms from BFO and RO; you are welcome to introduce new terms where needed:  
```
  (a) Sally has an arm Tuesday but does not have an arm Wednesday. 
  - Sally_arm instance_of fiat object part
  - Sally_body instance_of object
  - Sally_arm part_of Sally_body
  - Sally_arm disjoint_with Limbless_Sally
  ...
  - Sally_limbloss instance_of process 
  - Tuesday instance_of one-dimensional temporal region
  - Wednesday instance_of one_dimensional temporal region
  ...
 - Sally_body involved_in Sally_limbloss
 - Sally_limbloss has_output Limbless_Sally 
 - Sally_limbloss occurs_in Wednesday
 - Tuesday precedes Wednesday
  
  (b) Every liver has some cell as part at all times it exists.
 - Liver instance_of material anatomical entity
 - "Liver has_part_at_all_times Cell" (from project 3 Google Doc) 
  
  (c) John was a child, then an adult, then a senior. 
- John instance_of object
- John_childhood instance_of process
- John_adulthood instance_of process
- John_goldenyears instance_of process
- JohnStory instance_of history
...
- JohnStory occurs_in John
- John_childhood part_of JohnStory
- John_adulthood part_of JohnStory
- John_goldenyears part_of JohnStory
...
- John_childhood causally_upstream_of John_adulthood
- John_adulthood causally_upstream_of John_goldenyears
...
- Alternatively:
- John_childhood precedes John_adulthood
- John_adulthood precedes John_goldenyears
  
  (d) Goofus and Gallant are married at each point in a three year span. 
 - Goofus instance_of object
 - Gallant instance_of object
 ...
 - 3_years instance_of one-dimensional temporal region
 ...
 - GooGall_marriage instance_of process
 - Love4Goofus part_of GooGall_marriage
 - Love4Gallant part_of GooGall_marriage
 - Love4Goofus similar_in_magnitude_relative_to Love4Gallant
 - GooGall_marriage occurs_in 3_years
 ...
 - After referencing the project 3 Google doc, I can now see it is the case that the statement does not specify Goofus and Gallant are married to each other.
 - My work here should hopefully reflect this:
 ...
 - Goo_marriage instance_of process
 - Gall_marriage instance_of process
 - Goo_marriage occurs_in 3_years
 - Gall_marriage occurs_in 3_years
 - Goofus partner_in Goo_marriage
 - Gallant partner_in Gall_marriage
  
```

4. Using the language of First-Order Logic, represent the following natural language expressions; you are welcome to introduce new terms where needed: 
```
  (a) Sally has an arm Tuesday but does not have an arm Wednesday. 
  ∃Tues.B(S,A) ∧ Wed.B(S,¬A)
  - 'There exists a Tuesday with Sally bodying an arm and there is a Wednesday with Sally bodying a not-arm.'
  
  (b) Every liver has some cell as part at all times it exists.
  ∀Liver.C
  - 'All Livers have a Cell'
  - I don't know how to represent "at all times it exists" in FOL; I was thinking "all livers do not have a not-cell" but that either doesn't make sense, is redundant, or both.
  
  (c) John was a child, then an adult, then a senior. 
  ∃John.Child ∧ John.Grown ∧ John.Old ∧ John.¬(Child ∧ Grown ∧ Old)
  - 'There exists John as child and John as grown and John as old, and John not-as (child and grown and old), and none of these variables equal each other.'
  - I don't know how to represent 'pasthood' ("was" and "then") relations in FOL 
  ...
  
  (d) Goofus and Gallant have been married for three years; for each day of that span, it is true to assert they are married. 
  - ∃Y ⊓ Y(n = 3) ⊓ ∃M ⊓ ∀{F}.M({F},{x}) ⊓ ∀{L}.M({L},{y})
  class Y = year
  relation M = marriage
  individual F = Goofus
  individual L = Gallant
  
```

5. Using BFO and RO, model the following scenario: the content of an rdf file is represented in two serializations - one in Turtle, one in XML - which are sent from one computer to two distinct computers on the same network.   
- rdf_stuff instance_of generically dependent continuant
- Turtle_Serialization instance_of generically dependent continuant
- XML_Serialization instance_of generically dependent continuant
...
- rdf_stuff generically_depends_on Turtle_Serialization
- rdf_stuff generically_depends_on XML_Serialization
...
- Computer1 instance_of object
- Computer2 instance_of object
- Computer3 instance_of object
...
- Wifi_network instance_of object aggregate (project 3 document)
- Computer1 


6. Using Protege, place these in the BFO hierarchy where you think they fit best:
```
  (a) Bach's Well-Tempered Clavier
  - Process
  - the sheet music, along with any physical representation of the song (including recordings), are generically dependent continuants.
  
  (b) Chair of the UB Philosophy Department
  - Role
  -- The many chairs inside the UB Philosophy Department fiat object part of UB's campus are objects.
  
  (c) SARS-CoV-2
  - object
  
  (d) Mexico City
  - object aggregate made up of objects like inhabitants, buildings, streets, lights, smells, and et cetera.
  - What I am confused about here is whether or not an object aggregate must be aggregated of all the same object, as this is the case with the examples listed in chapter 5.
  
  (e) The trunk of a minivan
  - fiat object part
  - page 113 lists "the trunk of your car" as an example of a site.
  
  (f) Occupation
  - Depends, the position, as in the formal title, is a role. 
  - The conditions and expectations set around a position are generically dependent continuants about the role.
  - the actual work done, one's occupation of their time, is a process.
  
  (g) Ocean
  - fiat object part
  
  (h) Lake
  - fiat object part
  
- My answers for (g) and (h) are informed by the attached article: https://journals.sagepub.com/doi/pdf/10.1177/0263775817700395.
- I've heard Giacomo and Ali categorize both oceans and lakes as sites according to BFO. I support this categorization.
  
```
7. True or False; explain your answers:
```
  (a) An instance of Material Entity can have an instance of Immaterial Entity as part.
  - True: I think holes and cavities are immaterial entities.
  - My answer here is informed by chapter 5 of the BFO textbook as well as the attached slides: https://buffalo.app.box.com/s/6wmxnd9vvuhd9ubrldeptaerydqzkbct
  
  (b) An instance of Immaterial Entity can have an instance of Material Entity as part.
  - True: an imaginary friend is in a symmetric parthood relationship with the mind of the child who imagines it.
  - This is also written as being the case on page 112 of the BFO textbook.
 ...
  - Giacomo pointed out how the classes of material and immaterial entities are disjoint, according to BFO.
  - If this is the case, my answers to both (a) and (b) above are false. 
  
  (c) An organization may have another organization as part.
  - True: if we assume the opposite ("An organization CANNOT have another organization as part"), then I would never make friends in my classes or work in groups.
  - Many social organizations only exist insofar as the smaller social organizations constituting them exist as stable entities.
  
  (d) An organization may have no members as part. 
  - True: if nobody attends Anime Club on a given week, it still exists, both as a formal organization and as an empty room.
  - Unless its founders or relevant organizers dissolve it after weeks of nobody attending, Anime Club continues to exist as an organization with no members.
  
  (e) Any site is partially bounded by some instance of Material Entity.
  - True: a fully immaterial site, one not bounded to anything 'out there', cannot exist in the world. 
  - I am under the impression that a site is a 'de jure' entity; it only exists because we pay special attention to it/ give it a name.
  - We cannot demarcate a site around something wholly immaterial. 
  
  (f) A book placed under the leg of a wobbly table has acquired a new function. 
  - False: function is a specifically dependent quality; it is unique to the continuant which bears it.
  - Many other objects can be placed under the table, like a brick, or two other, thinner books.
  - Because stabilizing a table is a generic quality, the book has acquired a new role.
  
  (g) A glass vase cushioned with packing tape for all time, has the disposition to break. 
  - True: the glass vase itself has the disposition to break, regardless of individual circumstance.
  - The 'vase-and-packing-tape' is an instance of a new type of 'cushioned object', which may not have the disposition to break.
  
  (h) Spacetime is a class in BFO.
  - False: I cannot provide an explanation using theories in physics.
  - I have an intuition that spacetime cannot be represented in BFO because a spacial region is a continuant while a temporal region is an occurrent.

...
  - Looking at BFO in Protege I can now see that "spatiotemporal region" is an occurrent class in bfo made for regions of spacetime.
  - Spacetime itself is not a class.
  
  (i) The continuant fiat boundary class of BFO is closed, meaning, there are no subclasses beyond those identified presently in BFO.
  - I support Finn's assertion in the project 3 google doc that any of the given fiat boundary subclasses can be further subclassified according to a given domain and according to different granularities.
  - Like, measurements of a fiat boundary could subclassify them further, for example.
  
```
8. Model the following scenario in BFO, introducing whatever terms are needed to do so: John runs for 3 hours, startin slowly, speeding up during the middle, then ending the run at a slower pace.  
- John instance_of object
- John_run instance_of process
- John participates_in John_run
- John_runtime instance_of generically dependent continuant
...
- John_runpace instance_of process profile
- John_runpace_warmup part_of John_runpace 
- John_runpace_stride part_of John_runpace 
- John_runpace_cooldown part_of John_runpace 
...
- John_runnerhigh is_a quality
- John has_characteristic John_runnerhigh
^^ How would I add temporal parameters to this, clarifying that John only has a runners high after John_run is completed?

9. The Pellet reasoner in Protege can be used in an incremental reasoning strategy. ELI5 when and why one should use Pellet for incremental reasoning. 
- Here is a little blurb about Incremental Reasoning from https://www.oxfordsemantic.tech/glossary/incremental-reasoning#:~:text=Reasoning%20performed%20in%20response%20to,the%20amount%20of%20recomputations%20needed:
- Incremental reasoning is "Reasoning performed in response to updates by minimising the amount of recomputations needed".
...
- This is the "Background of Pellet Reasoner" from the Project 3 google doc rephrased so that a 5-year-old could (hopefully) follow along:

- What do you know about cats? Cats have some unique characteristics, like how some are calicos.
- They also have some characteristics that we know are shared with other animals.
- Pellet can figure out some facts about cats based on these shared characteristics.
- For example, if we say that cats are mammals, Pellet can infer that cats have warm blood.
- Pellet is able to make the connection on its own because all mammals have warm blood, so if a cat is a mammal it must have warm blood too.

- Pellet works using a special language called the "Web Ontology Language" (OWL).
- This language lets us describe what we're interested in in a way that everybody, including computers, can figure out. This includes details like characteristics and connections.

- Did you know that the first known cat name that we have is Nedjem, from Ancient Egypt? It means 'sweetie' or 'pleasant'.
- When you really stop to think about it, there's actually a lot of information in this one little piece of trivia. 
- Some cats have names, Ancient Egypt existed at one point, and every name can have a meaning.
- When you hear new facts like this, your brain automatically can take the fact apart like a puzzle, and put the pieces with other information like it.
- You don't start reminding yourself of everything you know about cats, Ancient Egypt, and names.
- Pellet can do the same thing. Incremental reasoning means Pellet focuses on new information, without reminding itself what it has stored already.

- Incremental reasoning has different parts to it:
- Dependency tracking looks at the facts that are required for a piece of information to keep being true.
- This is called consistency, and its really important in order to figure things out.
- Pellet tracking dependency lets it pay attention to important changes to the information so that it can make sure everything stays consistent.

- Pellet also has a really vast, really fast memory. 
- Caching lets Pellet 'go back and remember' what its already figured out when it needs to use the information on something new.
- This way, little changes don't cause big problems down the road. 
- Pellet can just take the information it needs when needed, and make its own connections without too much effort.

-  Pellet can be really helpful when many different people to want to share what they know.
- Pellet helps us develop big storage systems of information called "semantic web services", which make problem solving a lot easier.

10. Protege reasoners will not allow you to combine certain properties, e.g. reflexivity and transitivity. If you attempt to assert such pairs of the same object property, then run the reasoner, nothing will happen. If you combine such properties while a reasoner is running, then ask to synchronize the reasoner, an error will be thrown. Provide a table or series of tables illustrating which pairs of properties cannot be combined in Protege, either because nothing happens when the reasoenr is run or because an error is thrown when synchronizing a reasoner after making such changes. Review the github docs on [creating tables in markdown](https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables).
- Karl made a really thorough chart and put it in the Project 3 Google doc, so I don't feel the need to make my own.
- I am instead going to attempt to explain why certain properties cannot be combined:
- a.) Transitive and Functional/InverseFunctional 
Functional and Inverse Functional relations limit the count of possible bearers in the relation to at most 1.
Transitive relationships can only exist with at least 3 variables, which is contradictory to the existence of a functional/inverse functional relation.

- b.) Asymmetric and Transitive
Asymmetry means that if xRy, then y CANNOT R x


- c.) Asymmetric and Reflexive
A reflexive object property relates a variable to itself. 
This is inherently a symmetric relation because its bearer is identical to itself, both as an object and as a participant in the relation.
xRx = xRx

- d.) Asymmetric and Symmetric
 This is a contradiction; the two properties are inversions of each other, and cannot apply to the same relation.
 
 - e.) Irreflexive and Transitive
 Irreflexivity means a relation cannot be related to itself. Transitivity means a relation can be transferred to other variables.
 Here's a source I'm using: https://math.stackexchange.com/questions/1123463/is-an-irreflexive-and-transitive-set-an-anti-symmetric-set
 If x is related to y, and y is related to z
 xRy
 yRz
 xRz
 
 
 
 - f.) Irreflexive and Reflexive.
 See 10d.
 
 - g(Bonus).) The combination of Functional and Inverse Functional can be reasoned with, which shows me the difference between negation and inversion.
 A relation that only has one incoming and one outgoing variable is a unique relation. 
 It would imply that the only existence of the relation in the ontology only applies to two variables, or only one variable in a reflexive relation to itself.
 On the other hand, the combination of properties with their negated forms yields a contradiction.
 This is because it is impossible to bear and not-bear a relation simultaneously. 
 Bearing a relation alongside its opposite simply means there is a 'twofoldedness' to the relation.
 





